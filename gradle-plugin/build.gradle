apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'io.michaelrocks.pablo'

targetCompatibility = javaVersion
sourceCompatibility = javaVersion

dependencies {
  relocate project(':processor')

  implementation "org.jetbrains.kotlin:kotlin-stdlib$kotlinRuntimeVariant:$kotlinVersion"

  compileOnly gradleApi()
  compileOnly "com.android.tools.build:gradle:$androidToolsVersion"
  compileOnly "com.android.tools.build:gradle-api:$androidToolsVersion"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions {
    jvmTarget = javaVersion
  }
}

def generatedDir = new File(projectDir, "generated")
def generatedJavaSourcesDir = new File(generatedDir, "main/java")

task generateBuildClass {
  inputs.property('version', version)
  outputs.dir generatedDir

  doLast {
    def buildClassFile = new File(generatedJavaSourcesDir, "com/joom/lightsaber/plugin/Build.java")
    buildClassFile.parentFile.mkdirs()
    buildClassFile.text = "" +
        "package com.joom.lightsaber.plugin;\n" +
        "\n" +
        "public class Build {\n" +
        "    public static final String VERSION = \"$version\";\n" +
        "}\n"
  }
}

sourceSets {
  main {
    java.srcDirs += generatedJavaSourcesDir
  }
}

tasks.matching { it instanceof AbstractCompile }.forEach {
  it.dependsOn tasks.generateBuildClass
}

clean.doFirst {
  delete generatedDir
}

idea {
  module {
    generatedSourceDirs += generatedJavaSourcesDir
  }
}

pablo {
  shadow {
    relocate 'com.joom.lightsaber'
  }
}
